---
description: 
globs: 
alwaysApply: true
---
- When generating code, prioritize TypeScript and React best practices.
- Follow the coding standards defined in the ESLint configuration.
- Always validate user inputs and handle errors gracefully.
- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; use maps instead.
- Use functional components with TypeScript interfaces.
- Write concise, technical TypeScript code with accurate examples.
- Use functional and declarative programming patterns; avoid classes.
- Prefer iteration and modularization over code duplication.

- Use descriptive variable names with auxiliary verbs (e.g., `isLoading`, `hasError`).